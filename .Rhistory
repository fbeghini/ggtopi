facet_wrap(pentatome~.)+
theme_bw()
ggplot(subset(ordwu, timepoint %in% c('T3','T7'))) +
geom_point(aes(Axis.1, Axis.2, color=timepoint, shape=bifido), size=3) +
facet_wrap(pentatome~bifido)+
theme_bw()
ggplot(subset(ordwu, merge_timepoint %in% c('T3','T7'))) +
geom_point(aes(Axis.1, Axis.2, color=cond_all), size=3) +
scale_colour_discrete(name="Timepoint_Vaccine_Bifido") +
theme_bw()
ggplot(subset(ordwu, timepoint %in% c('T3','T7'))) +
geom_point(aes(Axis.1, Axis.2, color=timepoint, shape=bifido), size=3) +
facet_wrap(real_vaccine~real_bifido)+
theme_bw()
ggtopi_filt@sam_data$timepoint
ggtopi_filt@sam_data[,c('timepoint','real_bifido')]
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ timepoint + real_vaccine + real_bifido + timepoint:real_vaccine)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ timepoint + real_vaccine + real_bifido + timepoint:real_vaccine + timepoint:real_bifido + real_vaccine:real_bifido)
x = model.matrix(object = ~timepoint*real_vaccine*real_bifido, data = data.frame(gg_topi@sam_data))
x
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ timepoint*real_vaccine* real_bifido)
View(x)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ timepoint*real_vaccine* real_bifido)
ggtopi_filt@sam_data$cond_all
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ cond_all)
pds
pds@design
View(model.matrix(object = ~cond_all, data = data.frame(gg_topi@sam_data)))
dds <- DESeq2::DESeq(pds, parallel = TRUE, quiet = TRUE, fitType = 'parametric', reduced = ~ cond_all, test = 'LTR')
dds <- DESeq2::DESeq(pds, parallel = TRUE, quiet = TRUE, fitType = 'parametric', reduced = ~ cond_all, test = 'LRT')
dds <- DESeq2::DESeq(pds, parallel = TRUE, quiet = TRUE, fitType = 'parametric', reduced = ~ 1, test = 'LRT')
resultsNames(dds)
mmtx <- model.matrix(object = ~timepoint*real_vaccine*real_bifido, data = data.frame(gg_topi@sam_data))
res12 <- DESeq2::results(dds, contrast = list(c('cond_all_T7_YES_YES_vs_T1_NO_NO', 'cond_all_T7_NO_YES_vs_T1_NO_NO' )))
res12.filtered <- res12[!is.na(res12$padj),]
res12.filtered <- res12.filtered[res12.filtered$padj < threshold,]
plot(res12.filtered %>% as.data.frame %>% cbind(as.matrix(tax_table(gg_topi)[rownames(res12.filtered),])) %>%
ggplot(aes(log2FoldChange, Genus)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=3, aes(color = log10(baseMean))) +
facet_grid(Phylum ~ ., scales = "free", space = "free_y",switch = "y",as.table = T)+
theme_bw() +
ggtitle('Pentatome T3 vs T7') +
scale_y_discrete(position = "right") +
theme(axis.text = element_text(hjust = 0, vjust=0.5, size = 11),
strip.text = element_text(size = 9),
axis.title = element_text(size = 9),
axis.title.y = element_blank(),
strip.background = element_rect(colour = "transparent", fill = "transparent"),
strip.text.y = element_text(angle = 180)
))
res12.filtered
res12 <- DESeq2::results()
res12 <- DESeq2::results(dds)
res12
plotCounts(dds, which.min(res12$padj),
intgroup = c("minute","strain"), returnData = TRUE)
plotCounts(dds, which.min(res12$padj),
intgroup = c("cond_vac"), returnData = TRUE)
ggplot(fiss,
aes(x = as.numeric(minute), y = count, color = strain, group = strain)) +
geom_point() + geom_smooth(se = FALSE, method = "loess") + scale_y_log10()
ggplot(fiss,
aes(x = as.numeric(minute), y = count, color = cond_vac, group = cond_vac)) +
geom_point() + geom_smooth(se = FALSE, method = "loess") + scale_y_log10()
fiss <- plotCounts(dds, which.min(res12$padj),
intgroup = c("cond_vac"), returnData = TRUE)
ggplot(fiss,
aes(x = as.numeric(minute), y = count, color = cond_vac, group = cond_vac)) +
geom_point() + geom_smooth(se = FALSE, method = "loess") + scale_y_log10()
ggplot(fiss,
aes(x = as.numeric(cond_vac), y = count, color = cond_vac, group = cond_vac)) +
geom_point() + geom_smooth(se = FALSE, method = "loess") + scale_y_log10()
fiss
apply(mmtx, 2, function(x) all(x==0))
which(apply(mmtx, 2, function(x) all(x==0)))
mmtx <- mmtx[,-idx]
idx <- which(apply(mmtx, 2, function(x) all(x==0)))
mmtx <- mmtx[,-idx]
mmtx
mmtx
mmtx
mmtx <- model.matrix(object = ~timepoint*real_vaccine*real_bifido, data = data.frame(gg_topi@sam_data))
mmtx
idx <- which(apply(mmtx, 2, function(x) all(x==0)))
mmtx <- mmtx[,-idx]
dds <- DESeq2::DESeq(full = mmtx, reduced = ~ timepoint + real_vaccine + real_bifido, betaPrior = FALSE)
unname(mmtx)
mmtx
dds <- DESeq2::DESeq(full = mmtx, reduced = ~ timepoint + real_vaccine + real_bifido, betaPrior = FALSE, test = 'LRT')
pds <- phyloseq_to_deseq2(ggtopi_filt)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ 1)
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = ~ timepoint + real_vaccine + real_bifido, betaPrior = FALSE, test = 'LRT')
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = ~ timepoint + real_vaccine + real_bifido, test = 'LRT')
rmmtx <- model.matrix(object = ~ timepoint + real_vaccine + real_bifido, data = data.frame(gg_topi@sam_data))
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
which(apply(rmmtx, 2, function(x) all(x==0)))
which(apply(mmtx, 2, function(x) all(x==0)))
pds
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~ 1, ignoreRank = TRUE)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
rmmtx <- model.matrix(object = ~ timepoint + real_vaccine, data = data.frame(gg_topi@sam_data))
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
rmmtx <- model.matrix(object = ~ timepoint, data = data.frame(gg_topi@sam_data))
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
mmtx
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~1, ignoreRank = TRUE)
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
mmtx
View(mmtx)
which(apply(mmtx, 2, function(x) all(x==1)))
which(apply(mmtx, 2, function(x) all(x==)))
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'Wald')
dds <- DESeq2::DESeq(pds, full = mmtx,  test = 'Wald')
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
pds
pds@dispersionFunction()
pds@design
pds@rowRanges
pds@metadata
mappingfile <- read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
mappingfile$Description %<>% str_replace_all(.,'_','-')
mappingfile$condizione <- factor(mappingfile$condizione, labels = c('Pentatome + Bifido', 'Pentatome + PBS', 'Empty + Bifido', 'Empty + PBS'))
mappingfile <- read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
mappingfile
read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
mappingfile <- read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
mappingfile
mappingfile$Description %<>% str_replace_all(.,'_','-')
mappingfile$condizione <- factor(mappingfile$condizione, labels = c('Pentatome + Bifido', 'Pentatome + PBS', 'Empty + Bifido', 'Empty + PBS'))
sample_names(gg_topi)
sample_names(gg_topi) <- mappingfile[sample_names(gg_topi), 'Description']
mappingfile[sample_names(gg_topi), 'Description']
rownames(mappingfile)
rownames(mappingfile) <- mappingfile$Description
sample_names(gg_topi)
sample_data(gg_topi) <- mappingfile
sample_data(gg_topi)$id.topo <- factor(sample_data(gg_topi)$id.topo)
sample_data(gg_topi)$pentatome <- factor(stringr::str_split(sample_data(gg_topi)$condizione, ' \\+ ', simplify = TRUE)[,1])
sample_data(gg_topi)$bifido <- factor(stringr::str_split(sample_data(gg_topi)$condizione, ' \\+ ', simplify = TRUE)[,2])
sample_data(gg_topi)$cond_all <- factor(with(sample_data(gg_topi), paste(timepoint,real_vaccine, real_bifido, sep = '_')))
sample_data(gg_topi)$cond_vac <- factor(with(sample_data(gg_topi), paste(merge_timepoint,real_vaccine, sep = '_')))
sample_data(gg_topi)$cond_bif <- factor(with(sample_data(gg_topi), paste(merge_timepoint,real_bifido, sep = '_')))
sample_data(gg_topi)$vacc_bif <- strtoi(paste(ifelse(sample_data(gg_topi)$real_vaccine=='YES','1','0'),ifelse(sample_data(gg_topi)$real_bifido=='YES','1','0'), sep = ''), 2)
colnames(tax_table(gg_topi)) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species")
distwu <- phyloseq::distance(gg_topi, "wunifrac")
ordwu <-  ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., justDF = TRUE)
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = cage)
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = 'cage')
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = 'cage') + facet_grid(timepoint)
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = 'cage') + facet_grid('timepoint')
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = 'cage') + facet_wrap(timepoint ~ condizione)
ordinate(gg_topi, method = "MDS", distance = distwu, weighted = TRUE) %>% plot_ordination(gg_topi, ., color = 'cage') + facet_wrap(timepoint ~ real_all)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, paged.print=FALSE, echo=FALSE)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
mmtx <- model.matrix(object = ~timepoint + real_vaccine +real_bifido + timepoint:real_vaccine:real_bifido, data = data.frame(gg_topi@sam_data))
idx <- which(apply(mmtx, 2, function(x) all(x==0)))
mmtx <- mmtx[,-idx]
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
rmmtx <- model.matrix(object = ~ timepoint, data = data.frame(gg_topi@sam_data))
rmmtx
rmmtx <- model.matrix(object = ~ timepoint*real_vaccine, data = data.frame(gg_topi@sam_data))
mmtx <- model.matrix(object = ~timepoint + real_vaccine +real_bifido + timepoint:real_vaccine:real_bifido, data = data.frame(gg_topi@sam_data))
idx <- which(apply(mmtx, 2, function(x) all(x==0)))
mmtx <- mmtx[,-idx]
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~timepoint*real_vaccine*real_bifido, ignoreRank = TRUE)
dds <- DESeq2::DESeq(pds, full = mmtx, reduced = rmmtx, test = 'LRT')
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~cond_all, ignoreRank = TRUE)
pds <- phyloseq_to_deseq2(ggtopi_filt, design = ~cond_all)
dds <- DESeq2::DESeq(pds, test = 'LRT')
dds <- DESeq2::DESeq(pds, test = 'LRT', reduced = ~ cond_all)
dds <- DESeq2::DESeq(pds, test = 'LRT', reduced = ~ 1)
dds <- DESeq2::DESeq(pds, test = 'LRT', reduced = ~ 1)
dds <- DESeq2::DESeq(pds, test = 'LRT', reduced = ~ 1, parallel = TRUE)
resultsNames(dds)
DESeq2::results(dds, contrast = list(c("cond_all_T7_YES_YES_vs_T1_NO_NO", "cond_all_T7_NO_YES_vs_T1_NO_NO"), c("cond_all_T7_YES_NO_vs_T1_NO_NO", "cond_all_T7_NO_NO_vs_T1_NO_NO")))
DESeq2::results(dds, contrast = list(c("cond_all_T7_YES_YES_vs_T1_NO_NO", "cond_all_T7_NO_YES_vs_T1_NO_NO"), c("cond_all_T7_YES_NO_vs_T1_NO_NO", "cond_all_T7_NO_NO_vs_T1_NO_NO"))) %>%
filter(padj < 0.05)
res <- DESeq2::results(dds, contrast = list(c("cond_all_T7_YES_YES_vs_T1_NO_NO", "cond_all_T7_NO_YES_vs_T1_NO_NO"), c("cond_all_T7_YES_NO_vs_T1_NO_NO", "cond_all_T7_NO_NO_vs_T1_NO_NO")))
res
res %>% filter(padj < 0.05)
res.filt <- res[res$padj<0.05,]
res.filt
res.filtered <- res[!is.na(res$padj),]
res.filt <- res[!is.na(res$padj),]
res.filt <- res.filt[res.filt$padj<0.05,]
res.filt
dds <- DESeq2::DESeq(pds, parallel = TRUE)
resultsNames(dds)
res <- DESeq2::results(dds, contrast = list(c("cond_all_T7_YES_YES_vs_T1_NO_NO", "cond_all_T7_NO_YES_vs_T1_NO_NO"), c("cond_all_T7_YES_NO_vs_T1_NO_NO", "cond_all_T7_NO_NO_vs_T1_NO_NO")))
res
res.filt <- res[!is.na(res$padj),]
res.filt
res.filt <- res.filt[res.filt$padj<0.05,]
res.filt
res.filt %>% as.data.frame %>% cbind(as.matrix(tax_table(ggtopi_filt)[rownames(res.filt),])) %>%
ggplot(aes(log2FoldChange, Genus)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=3, aes(color = log(baseMean))) +
facet_grid(Phylum ~ ., scales = "free", space = "free_y",switch = "y",as.table = T)+
theme_bw() +
scale_y_discrete(position = "right") +
theme(axis.text = element_text(hjust = 0, vjust=0.5, size = 11),
strip.text = element_text(size = 9),
axis.title = element_text(size = 9),
axis.title.y = element_blank(),
strip.background = element_rect(colour = "transparent", fill = "transparent"),
strip.text.y = element_text(angle = 180)
)
sample_data(gg_topi)
sample_data(gg_topi) %>% data.frame %>% filter(timepoint == 'T7')
sample_data(gg_topi) %>%
data.frame %>%
filter(timepoint == 'T7') %>%
model.matrix(~real_vaccine + real_bifido + real_vaccine*real_bifido)
sample_data(gg_topi) %>%
data.frame %>%
filter(timepoint == 'T7') %>%
model.matrix(~real_vaccine + real_bifido + real_vaccine*real_bifido, data = .)
sample_data(gg_topi) %>%
data.frame %>%
filter(timepoint == 'T7')
sample_data(gg_topi) %>%
data.frame %>%
filter(timepoint == 'T7') %>%
model.matrix(~real_vaccine + real_bifido + real_vaccine*real_bifido, data = .)
otus <- data.frame(otu_table(gg_topi.genus.relab), check.names = FALSE) %>%
tibble::rownames_to_column('OTU') %>%
tidyr::gather_("SampleID", "Abundance", setdiff(colnames(.), "OTU")) %>%
left_join(data.frame(tax_table(gg_topi.genus.relab)[,-7], check.names = FALSE) %>% tibble::rownames_to_column('OTU')) %>%
tibble::add_column(., timepoint = stringr::str_sub(.$SampleID, 12, 13)) %>%
tibble::add_column(., mouseID = stringr::str_sub(.$SampleID, 8, 10))
otus
?dcast
airquality
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
aqm
acast(aqm, day ~ month ~ variable)
acast(aqm, month ~ variable, mean)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(OTU ~ Abundance)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(OTU ~ Abundance + timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(timepoint ~ Abundance)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(...~timepoint)
otus %>%
filter(mouseID==865)%>%
# head %>%
reshape2::dcast(...~timepoint)
otus %>%
filter(mouseID==865)%>%
# head %>%
reshape2::dcast(...~mouseID)
otus %>%
filter(mouseID==865)%>%
# head %>%
reshape2::dcast(...)
otus %>%
filter(mouseID==865)%>%
# head %>%
reshape2::dcast()
otus %>%
filter(mouseID==865)%>%
# head %>%
# reshape2::dcast()
```
otus %>%
filter(mouseID==865)
otus %>%
filter(mouseID==865)%>%
head
reshape2::dcast(timepoint ~ )
reshape2::dcast(timepoint ~ ...)
reshape2::dcast(timepoint ~ .)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(timepoint ~ .)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(timepoint ~ ...)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(timepoint ~ ..)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(timepoint ~ .)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(.~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance+mouseID~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance~mouseID~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(AbundancemouseID~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance-mouseID~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance~timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance~timepoint+mouseID)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(Abundance~mouseID + timepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(mouseID + Abundancetimepoint)
otus %>%
filter(mouseID==865)%>%
head %>%
reshape2::dcast(mouseID + Abundance~timepoint)
otus %>%
filter(mouseID==865)%>%
head
otus %>%
filter(mouseID==865)
otus %>%
filter(mouseID==865) %>%
head %>%
reshape2::dcast(mouseID + Abundance~timepoint)
otus %>%
filter(mouseID==865) %>%
head
otus %>%
filter(mouseID==865) %>%
head %>%
reshape2::dcast(mouseID ~ timepoint)
otus %>%
filter(mouseID==865) %>%
head %>%
reshape2::dcast(mouseID ~ timepoint, value.var = 'Abundance')
otus %>%
filter(mouseID==865) %>%
head %>%
reshape2::dcast(OTU ~ timepoint, value.var = 'Abundance')
otus %>%
filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint, value.var = 'Abundance')
otus %>%
filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ mouseID + timepoint, value.var = 'Abundance')
otus %>%
filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU + mouseID~ timepoint, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU + mouseID~ timepoint, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint, value.var = 'Abundance')
gg_topi.genus.relab@sam_data$id.topo
gg_topi.genus.relab@sam_data
gg_topi.genus.relab@sam_data %>% VIew
gg_topi.genus.relab@sam_data %>% View
gg_topi.genus.relab@sam_data %>% data.frame %>% View
gg_topi <- import_biom(BIOMfilename = '/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/otus_silva/otu_table_mc10_w_tax.biom',
treefilename = '/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/otus_silva/rep_set.tre',
refseqfilename = '/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/otus_silva/rep_set.fna',
refseqFunction = parse_taxonomy_default
)
mappingfile <- read.delim('/shares/CIBIO-Storage/CM/mir/projects/fbeghini_16s/20180731_run186ms_segata/grandi/mappingfile', row.names = 1, check.names = FALSE)
mappingfile$Description %<>% str_replace_all(.,'_','-')
mappingfile$condizione <- factor(mappingfile$condizione, labels = c('Pentatome + Bifido', 'Pentatome + PBS', 'Empty + Bifido', 'Empty + PBS'))
sample_names(gg_topi) <- mappingfile[sample_names(gg_topi), 'Description']
rownames(mappingfile) <- mappingfile$Description
sample_data(gg_topi) <- mappingfile
sample_data(gg_topi)$id.topo <- factor(sample_data(gg_topi)$id.topo)
sample_data(gg_topi)$pentatome <- factor(stringr::str_split(sample_data(gg_topi)$condizione, ' \\+ ', simplify = TRUE)[,1])
sample_data(gg_topi)$bifido <- factor(stringr::str_split(sample_data(gg_topi)$condizione, ' \\+ ', simplify = TRUE)[,2])
sample_data(gg_topi)$cond_all <- factor(with(sample_data(gg_topi), paste(timepoint,real_vaccine, real_bifido, sep = '_')))
sample_data(gg_topi)$cond_vac <- factor(with(sample_data(gg_topi), paste(merge_timepoint,real_vaccine, sep = '_')))
sample_data(gg_topi)$cond_bif <- factor(with(sample_data(gg_topi), paste(merge_timepoint,real_bifido, sep = '_')))
sample_data(gg_topi)$vacc_bif <- strtoi(paste(ifelse(sample_data(gg_topi)$real_vaccine=='YES','1','0'),ifelse(sample_data(gg_topi)$real_bifido=='YES','1','0'), sep = ''), 2)
colnames(tax_table(gg_topi)) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species")
tax_table_filtered <- tax_table(gg_topi) %>%
as.data.frame %>%
mutate_all( .funs = function(x) stringr:::str_replace_all(x,"D_.__",""))
rownames(tax_table_filtered) <- rownames(tax_table(gg_topi))
tax_table(gg_topi) <-  as.matrix(tax_table_filtered)
gg_topi.genus <- tax_glom(gg_topi,taxrank = "Genus")
gg_topi.genus.relab <- transform_sample_counts(gg_topi.genus, function(x) x/sum(x))
gg_topi.phylum <- tax_glom(gg_topi,taxrank = "Phylum")
gg_topi.phylum.relab <- transform_sample_counts(gg_topi.phylum, function(x) x/sum(x))
meta_samples <- data.frame(otu_table(gg_topi), check.names = FALSE) %>%
tibble::rownames_to_column("OTU") %>%
tidyr::gather_("SampleID", "Abundance", setdiff(colnames(.), "OTU")) %>%
tibble::add_column(., timepoint = stringr::str_sub(.$SampleID, 12, 13)) %>%
dplyr::group_by(timepoint, OTU) %>%
dplyr::select(-SampleID)%>%
dplyr::summarise(Abundance=mean(Abundance)) %>%
tidyr::spread(timepoint, Abundance) %>%
tibble::column_to_rownames(var = 'OTU') %>%
data.frame()
gg_topi_meta_samples <- phyloseq(otu_table(meta_samples, taxa_are_rows = TRUE), tax_table(gg_topi), phy_tree(gg_topi))
otus <- data.frame(otu_table(gg_topi.genus.relab), check.names = FALSE) %>%
tibble::rownames_to_column('OTU') %>%
tidyr::gather_("SampleID", "Abundance", setdiff(colnames(.), "OTU")) %>%
left_join(data.frame(tax_table(gg_topi.genus.relab)[,-7], check.names = FALSE) %>% tibble::rownames_to_column('OTU')) %>%
tibble::add_column(., timepoint = stringr::str_sub(.$SampleID, 12, 13)) %>%
tibble::add_column(., mouseID = stringr::str_sub(.$SampleID, 8, 10))
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU + ...~ timepoint + mouseID, value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID + ... , value.var = 'Abundance')
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID , value.var = 'Abundance')
otus <- data.frame(otu_table(gg_topi.genus.relab), check.names = FALSE) %>%
tibble::rownames_to_column('OTU') %>%
tidyr::gather_("SampleID", "Abundance", setdiff(colnames(.), "OTU")) %>%
tibble::add_column(., timepoint = stringr::str_sub(.$SampleID, 12, 13)) %>%
tibble::add_column(., mouseID = stringr::str_sub(.$SampleID, 8, 10))
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID , value.var = 'Abundance')
otus
otus %>%
# filter(mouseID==865) %>%
# head %>%
reshape2::dcast(OTU ~ timepoint + mouseID , value.var = 'Abundance') %>%
left_join(data.frame(tax_table(gg_topi.genus.relab)[,-7], check.names = FALSE) %>% tibble::rownames_to_column('OTU'))
otus %>%
filter(mouseID==865) %>%
reshape2::dcast(OTU ~ timepoint + mouseID , value.var = 'Abundance') %>%
left_join(data.frame(tax_table(gg_topi.genus.relab)[,-7], check.names = FALSE) %>% tibble::rownames_to_column('OTU'))
otus %>%
filter(mouseID==865) %>%
reshape2::dcast(OTU ~ timepoint, value.var = 'Abundance') %>%
left_join(data.frame(tax_table(gg_topi.genus.relab)[,-7], check.names = FALSE) %>% tibble::rownames_to_column('OTU'))
libray
library(xlsx)
install.packages('xlsx')
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
Sys.getenv(c("JAVA_HOME", "LD_LIBRARY_PATH"))
install.packages('rJava')
library(xlsx)
remove.packages(c('rJava', 'xlsx'))
remove.packages(c('rJava', 'xlsx'))
library(xlsx)
